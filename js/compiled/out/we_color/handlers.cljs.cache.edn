;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name we-color.handlers, :imports nil, :requires {re-frame.core re-frame.core, db we-color.db, we-color.db we-color.db, we-color.parse we-color.parse, we-color.format we-color.format}, :uses {parse-android we-color.parse, ->android we-color.format, path re-frame.core, ->ios we-color.format, parse-ios we-color.parse, debug re-frame.core, trim-v re-frame.core, dispatch re-frame.core, after re-frame.core, register-handler re-frame.core}, :defs {handle-with {:protocol-inline nil, :meta {:file "/Users/dhleong/git/we-color/src/cljs/we_color/handlers.cljs", :line 11, :column 7, :end-line 11, :end-column 18, :arglists (quote ([parser])), :doc "Generate a color-parsing middleware that uses the \n  provided parse function"}, :name we-color.handlers/handle-with, :variadic false, :file "/Users/dhleong/git/we-color/src/cljs/we_color/handlers.cljs", :end-column 18, :method-params ([parser]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([parser])), :doc "Generate a color-parsing middleware that uses the \n  provided parse function"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:formats :initialize-db :format :ios :android :invalidate}, :order [:initialize-db :android :ios :formats :format :invalidate]}, :doc nil}